// <auto-generated />
using System;
using GigHubCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GigHubCore.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181028021403_PopulateGenres")]
    partial class PopulateGenres
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("GigHubCore.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("GigHubCore.Models.Genre", b =>
                {
                    b.Property<byte>("Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("GigHubCore.Models.Gig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ArtistId");

                    b.Property<DateTime>("DateTime");

                    b.Property<byte?>("GenreId");

                    b.Property<string>("Venue");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Gig");
                });

            modelBuilder.Entity("GigHubCore.Models.Gig", b =>
                {
                    b.HasOne("GigHubCore.Models.ApplicationUser", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId");

                    b.HasOne("GigHubCore.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");
                });
#pragma warning restore 612, 618
        }
    }
}
